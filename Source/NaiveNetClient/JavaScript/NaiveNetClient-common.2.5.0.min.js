class Format{callback(param){param.success=param.success||function(){};param.fail=param.fail||function(){};param.complete=param.complete||function(){};param._success=function(res){param.success(res);param.complete(res)};param._fail=function(res){param.fail(res);param.complete(res)}}}const format=new Format();const codemap={200:'ok',400:'not found controller',401:'not found channel',402:'cannot be established',403:'channel refuse connect',404:'channel not established with server',500:'permission denied',501:'data format error',502:'unknow error',503:'recover failed',}let handler=null;if("undefined"!=typeof wx){handler=wx}else if("undefined"!=typeof tt){handler=tt}function outdata(data){if(handler){return{data:data}}else{return data}}class NaiveModule{constructor(){this._ctrls={}}addController(name,func=function(param,response=function(){}){}){this._ctrls[name]=func}removeController(name){if(this._ctrls[name])this._ctrls[name]=null}_do(opt,callback=function(){}){if(this._ctrls[opt.controller]){this._ctrls[opt.controller](opt,callback);return true}else{return false}}}class NaiveNet{constructor(autocode=true){this._sockettask=null;this._level=0;this._autocode=autocode;this._t_id=0;this._t_msg={};this._t_wt=[];this._timeout=5000;this._ping=0;this._hearttimeout=10000;this._auth=false;this._sessionid='';this._ns="";this._channel={}this._channel_cache={}this._boxs=[];this.onBreak=function(){};this.onRecover=function(){};this.onAuth=function(){}this.onPingChange=function(){}this._donotcallOnbreak=false}setToken(token){this._sessionid=token}getToken(){if(this._auth)return this._sessionid;return null}connect(opt){opt=opt||{};format.callback(opt);this.close();if(handler){this._sockettask=handler.connectSocket({url:opt.ns,success:(res)=>{},fail:(res)=>{opt._fail({code:400,errmsg:'无法建立网络连接'})}})this._sockettask.onOpen(function(){this._level=1;this._ns=opt.ns;opt._success({code:200,errmsg:'成功建立连接'})this._autoheart();return}.bind(this));this._sockettask.onClose(function(res){this._level=0;this._onBreak()}.bind(this));this._sockettask.onMessage(function(res){this._parseMsg(res)}.bind(this))this._sockettask.onError(function(res){this.level=0;opt._fail({code:400,errmsg:'网络连接失败'})}.bind(this))}else{this._sockettask=new WebSocket(opt.ns);this._sockettask.binaryType="arraybuffer";if(!this._sockettask){opt._fail({code:400,errmsg:'连接失败'})return}this._sockettask.onopen=function(){this._level=1;this._ns=opt.ns;opt._success({code:200,errmsg:'成功建立连接'})this._autoheart();return}.bind(this);this._sockettask.onclose=function(res){this._level=0;this._onBreak()}.bind(this);this._sockettask.onmessage=function(res){this._parseMsg(res)}.bind(this);this._sockettask.onerror=function(res){}.bind(this)}}close(opt){opt=opt||{};format.callback(opt);if(this._sockettask){this.request({controller:'close',complete:(res)=>{this._sockettask.close();this._level=0;opt._success({code:200})}})}else{opt._success({code:200})}}break(opt){opt=opt||{};format.callback(opt);if(this._level==1){this._level=0;if(opt.eventstatus===undefined)opt.eventstatus=true;if(!opt.eventstatus)this._donotcallOnbreak=true;else this._donotcallOnbreak=false;this._sockettask.close()}}recover(opt){opt=opt||{};format.callback(opt);opt.token=opt.token||this._sessionid;opt.ns=opt.ns||this._ns;if(this._level==1){opt._success({code:200,errmsg:'ok'});return}this.connect({ns:opt.ns,success:(res)=>{this.request({channel:'',controller:'recover',data:opt.token,success:(res)=>{this._level=1;opt._success(res);this.onRecover()},fail:(res)=>{this.break({eventstatus:false})opt._fail(res)}})},fail:(res)=>{opt._fail(res)}})}enterChannel(opt){opt=opt||{};format.callback(opt);if(opt.channel==''){opt._success({code:200,errmsg:'ok connect ns'})return}let key=this._ns+"_"+opt.channel;if(opt.cache){let status=this._channel_cache[key];if(status){opt._success({code:200,errmsg:'ok use cache'})return}}this.request({channel:'',controller:'enterChannel',data:opt.channel,success:(res)=>{this._channel_cache[key]=true;opt._success({code:200,errmsg:'ok no cache'})},fail:(res)=>{opt._fail(res)}})}quitChannel(opt){opt=opt||{};format.callback(opt);this.getChannelID({channel:opt.channel,success:(res)=>{this.request({channel:'',controller:'quitChannel',data:res.id+'',complete:(res)=>{opt._success({code:200,errmsg:'ok'})}})}})}getChannelID(opt){opt=opt||{};format.callback(opt);opt.channel=opt.channel||'';if(opt.channel==''){opt._success({code:200,id:0})return}let database=this._channel[this._ns];if(!database){this._channel[this._ns]={};database={}}let channel=database[opt.channel];if(channel){opt._success({code:200,id:channel})return}this.request({channel:'',controller:'getChannel',data:opt.channel,success:(res)=>{if(res.code==200){let id=parseInt(res.data);this._channel[this._ns][opt.channel]=id;opt._success({code:200,id:id})return}opt._fail({code:400,errmsg:'获取失败'})},fail:(res)=>{opt._fail(res)}})}request(opt){opt=opt||{};format.callback(opt);opt.channel=opt.channel||"";if(opt.data===undefined)opt.data="";else{if(typeof opt.data=='number'){opt.data=""+opt.data}}if(!opt.controller){opt._fail({code:400,errmsg:'控制器（controller）不能为空'});return}if(this._level!=1){opt._fail({code:400,errmsg:'当前状态无法发出请求'});return}this.getChannelID({channel:opt.channel,success:(res2)=>{this.enterChannel({channel:opt.channel,cache:true,success:(res)=>{let second=false;let _opt={channelid:res2.id,data:opt.data,controller:opt.controller,success:(res)=>{opt._success(res)},fail:(res)=>{if(res.code==404){if(second){opt._fail(res);return}second=true;this.enterChannel({channel:opt.channel,cache:false,success:(res)=>{this._request(_opt)},fail:(res)=>{opt._fail(res)}})}else{opt._fail(res)}}}this._request(_opt)},fail:(res)=>{opt._fail(res)}})},fail:(res)=>{opt._fail(res)}})}createBox(){return new NaiveModule()}addBox(mod){for(let i=0;i<this._boxs.length;i++){if(this._boxs[i]==mod)return}this._boxs.push(mod)}removeBox(mod){for(let i=0;i<this._boxs.length;i++){if(this._boxs[i]==mod){for(let j=i+1;j<this._boxs.length;j++){this._boxs[j-1]=this._boxs[j]}this._boxs.pop();return true}}return false}_genTempMsgId(){for(let i=0;i<125;i++){if(this._t_id>125)this._t_id=0;let item=this._t_msg[""+this._t_id];if(!item){return this._t_id++}this._t_id++}return-1}_request(opt,channelid){opt=opt||{};format.callback(opt);let channelID=opt.channelid;let id=this._genTempMsgId();if(id==-1){this._t_wt.push(opt);return}let record=[opt,false,-1,new Date().getTime(),];this._t_msg[''+id]=record;let data=opt.data||"";if(typeof data=='string'){data=this._stringToArrayBuffer(data)}let channelIDData=this._genLenArrayBuffer(channelID);let controllerData=this._stringToArrayBuffer(opt.controller);let controllerDataU8=new Uint8Array(controllerData);let controllerHeader=this._genLenArrayBuffer(controllerDataU8.length);let contentData=this._stringToArrayBuffer(opt.data);let contentDataU8=new Uint8Array(contentData);let contentDataHeader=this._genLenArrayBuffer(contentDataU8.length);let _dataA=new ArrayBuffer(channelIDData.length+controllerDataU8.length+controllerHeader.length+contentDataU8.length+contentDataHeader.length+2);let _data=new Uint8Array(_dataA);_data[0]=1;_data[1]=id;_data.set(channelIDData,2);let index=2+channelIDData.length;_data.set(controllerHeader,index);index+=controllerHeader.length;_data.set(controllerDataU8,index);index+=controllerDataU8.length;_data.set(contentDataHeader,index);index+=contentDataHeader.length;_data.set(contentDataU8,index);try{this._sockettask.send(outdata(_data.buffer));this._t_msg[''+id][2]=setTimeout(function(){opt._fail({code:401,errmsg:'响应超时'});delete this._t_msg[''+id]this._sendCheckWt()}.bind(this),this._timeout)}catch(e){opt._fail({code:400,errmsg:'发送失败'});delete this._t_msg[''+id]this._sendCheckWt()}}_autoheart(){let next=function(){if(this._level==1){this.request({controller:'heart',data:''+this._ping});setTimeout(next.bind(this),this._hearttimeout)}}next.bind(this)()}_onBreak(){if(!this._donotcallOnbreak)this.onBreak({code:400,errmsg:'break'});this._donotcallOnbreak=false}_parseMsg(res){let udata=new Uint8Array(res.data);if(udata[0]==0||udata[0]==3){let id=udata[1];let msg=this._t_msg[''+id];if(!msg)return;let index=2;let channel_data=this._parseLenArrayBuffer(index,udata);let channel_id=channel_data[1];index+=channel_data[0];let param_len=this._parseLenArrayBuffer(index,udata);index+=param_len[0];let param_content=this._parseContentArrayBuffer(index,udata,param_len[1]);let ping=new Date().getTime()-msg[3];this._setPing(ping);clearTimeout(msg[2]);delete this._t_msg[''+id];if(udata[0]==0){msg[0]._success({code:200,originData:param_content,data:this._autocode?this.Uint8ArrayToString(param_content):null,errmsg:codemap[200]})}else{let code=parseInt(this.Uint8ArrayToString(param_content))msg[0]._fail({code:code,errmsg:codemap[code]})}this._sendCheckWt();return}else if(udata[0]==1){let control=udata[0];let msgid=udata[1];let index=2;let channelid_data=this._parseLenArrayBuffer(index,udata);let channelid=channelid_data[1];index+=channelid_data[0];let end=index-1;let ctrl_len=this._parseLenArrayBuffer(index,udata);index+=ctrl_len[0];let ctrl_content=this._parseContentArrayBuffer(index,udata,ctrl_len[1]);index+=ctrl_len[1];let param_len=this._parseLenArrayBuffer(index,udata);index+=param_len[0];let param_content=this._parseContentArrayBuffer(index,udata,param_len[1]);if(channelid==0){this._dealNSToClient(this.Uint8ArrayToString(ctrl_content),this.Uint8ArrayToString(param_content))}else{this._dealNCToClient({originContent:udata,originHeaderEndIndex:end,originMsgID:msgid,originChannelID:channelid,controller:this.Uint8ArrayToString(ctrl_content),dataBytes:param_content,data:this._autocode?this.Uint8ArrayToString(param_content):null})}}}_dealNSToClient(controller,param){switch(controller){case'auth':this._auth=true;this._sessionid=param;this.onAuth({code:200,errmsg:'ok',token:param})break}}_dealNCToClient(opt){let t=this;let response=function(res=''){t._response(opt,true,res)}for(let i in this._boxs){let r=this._boxs[i]._do(opt,response);if(r){return}}this._response(opt,false,null)}_response(opt,success,param=null){let data=(typeof param=='string')?this._stringToArrayBuffer(param):param;let data_U8=new Uint8Array(data);let data_len=this._genLenArrayBuffer(data_U8.length);let content=new ArrayBuffer(opt.originHeaderEndIndex+1+data_len.length+data_U8.length);let _content=new Uint8Array(content);for(let i=0;i<=opt.originHeaderEndIndex;i++){_content[i]=opt.originContent[i]}if(success){_content[0]=0}else{_content[0]=3}let index=opt.originHeaderEndIndex+1;_content.set(data_len,index);index+=data_len.length;_content.set(data_U8,index);this._sockettask.send(outdata(_content.buffer))}_sendCheckWt(){if(this._t_wt.length>0){let item=this._t_wt.shift();this._request(item)}}_setPing(ping){this._ping=parseInt(ping/2);this.onPingChange(this._ping)}getPing(){return this._ping}_parseLenArrayBuffer(start,data){let value=0;let n=0;for(let i=start;i<data.length;i++){let a=data[i];if(a!=255){return[1,a]}value+=a;n++}return new[n,value]}_parseContentArrayBuffer(start,data,length){let _data=[];let index=start;for(let i=0;i<length;index++){_data.push(data[index]);i+=1}let content=new Uint8Array(_data);return content}_genLenArrayBuffer(length){let len=parseInt(length/255)+1;let data=new ArrayBuffer(len);let _data=new Uint8Array(data);for(let i=0;i<len;i++){if(length>255){_data=255;length-=255}else{_data[i]=length;break}}return _data}_stringToArrayBuffer(str){var bytes=new Array();var len,c;len=str.length;for(var i=0;i<len;i++){c=str.charCodeAt(i);if(c>=0x010000&&c<=0x10FFFF){bytes.push(((c>>18)&0x07)|0xF0);bytes.push(((c>>12)&0x3F)|0x80);bytes.push(((c>>6)&0x3F)|0x80);bytes.push((c&0x3F)|0x80)}else if(c>=0x000800&&c<=0x00FFFF){bytes.push(((c>>12)&0x0F)|0xE0);bytes.push(((c>>6)&0x3F)|0x80);bytes.push((c&0x3F)|0x80)}else if(c>=0x000080&&c<=0x0007FF){bytes.push(((c>>6)&0x1F)|0xC0);bytes.push((c&0x3F)|0x80)}else{bytes.push(c&0xFF)}}var array=new Int8Array(bytes.length);for(var i in bytes){array[i]=bytes[i]}return array.buffer}_arrayBufferToString(arr){if(typeof arr==='string'){return arr}var dataview=new DataView(arr.data);var ints=new Uint8Array(arr.data.byteLength);for(var i=0;i<ints.length;i++){ints[i]=dataview.getUint8(i)}arr=ints;var str='',_arr=arr;for(var i=0;i<_arr.length;i++){var one=_arr[i].toString(2),v=one.match(/^1+?(?=0)/);if(v&&one.length==8){var bytesLength=v[0].length;var store=_arr[i].toString(2).slice(7-bytesLength);for(var st=1;st<bytesLength;st++){store+=_arr[st+i].toString(2).slice(2)}str+=String.fromCharCode(parseInt(store,2));i+=bytesLength-1}else{str+=String.fromCharCode(_arr[i])}}return str}Uint8ArrayToString(array){var out,i,len,c;var char2,char3;out="";len=array.length;i=0;while(i<len){c=array[i++];switch(c>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:out+=String.fromCharCode(c);break;case 12:case 13:char2=array[i++];out+=String.fromCharCode(((c&0x1F)<<6)|(char2&0x3F));break;case 14:char2=array[i++];char3=array[i++];out+=String.fromCharCode(((c&0x0F)<<12)|((char2&0x3F)<<6)|((char3&0x3F)<<0));break}}return out}}